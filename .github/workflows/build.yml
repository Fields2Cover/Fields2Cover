name: Build and test

on:
  push:
  pull_request:
  release:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    container: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu_GDAL_3_0_2",
            os: osgeo/gdal:ubuntu-full-3.0.2,
            artifact: "ubuntu_gdal_3_0_2.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_3_0_4",
            os: osgeo/gdal:ubuntu-full-3.0.4,
            artifact: "ubuntu_gdal_3_0_4.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_3_1_3",
            os: osgeo/gdal:ubuntu-full-3.1.3,
            artifact: "ubuntu_gdal_3_1_3.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_3_2_3",
            os: osgeo/gdal:ubuntu-full-3.2.3,
            artifact: "ubuntu_gdal_3_2_3.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_3_3_3",
            os: osgeo/gdal:ubuntu-full-3.3.3,
            artifact: "ubuntu_gdal_3_3_3.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_3_4_3",
            os: osgeo/gdal:ubuntu-full-3.4.3,
            artifact: "ubuntu_gdal_3_4_3.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_3_5_3",
            os: osgeo/gdal:ubuntu-full-3.5.3,
            artifact: "ubuntu_gdal_3_5_3.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_3_6_2",
            os: osgeo/gdal:ubuntu-full-3.6.2,
            artifact: "ubuntu_gdal_3_6_2.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }
        - {
            name: "Ubuntu_GDAL_latest",
            os: osgeo/gdal:ubuntu-full-latest,
            artifact: "ubuntu_gdal_latest.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
            generators: "Unix Makefiles"
          }

    steps:
      - uses: actions/checkout@v2
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          apt-get -y update
          apt-get install -y --no-install-recommends apt-utils software-properties-common
          apt-get -y update
          apt-get install wget
          wget https://github.com/Kitware/CMake/releases/download/v3.17.2/cmake-3.17.2-Linux-x86_64.sh -q -O /tmp/cmake-install.sh
          chmod u+x /tmp/cmake-install.sh
          mkdir /usr/bin/cmake
          /tmp/cmake-install.sh --skip-license --prefix=/usr/bin/cmake
          rm /tmp/cmake-install.sh
          export PATH="/usr/bin/cmake/bin:${PATH}"

          apt-get install -y --no-install-recommends \
            build-essential \
            ca-certificates \
            doxygen \
            g++ \
            git \
            libeigen3-dev \
            libpython3-dev \
            python3 \
            python3-pip \
            python3-matplotlib \
            python3-pytest \
            lcov \
            libboost-dev \
            libgtest-dev \
            libtbb-dev \
            swig
          python3 -m pip install gcovr

      - name: Install Gtest dependency
        working-directory: /usr/src/gtest
        run: |
          apt-get install -y libgtest-dev
          cd /usr/src/gtest
          cmake CMakeLists.txt
          make
          cp lib/*.a /usr/lib/

      - name: Configure GDAL
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          mkdir -p /usr/include/new_gdal
          cp -r /usr/include/gdal* /usr/include/new_gdal/
          cp /usr/include/ogr* /usr/include/new_gdal/
          cp /usr/include/cpl* /usr/include/new_gdal/
          mv /usr/include/new_gdal/ /usr/include/gdal/

      - name: Install more dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo add-apt-repository -y ppa:ubuntugis/ppa
          sudo apt-get -y update -qq
          sudo apt-get install cmake make
          sudo apt-get install -y python3 curl zip unzip -qq
          sudo apt-get install -y --no-install-recommends ca-certificates doxygen git libeigen3-dev libpython3-dev python3-pip python3-matplotlib lcov libgtest-dev libtbb-dev swig python3-pytest -qq
      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install p7zip cmake make eigen swig numpy gdal

      - name: Configure
        shell: bash
        run: |
          mkdir build
          mkdir instdir
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir  \
            -DBUILD_PYTHON=ON   \
            -DALLOW_PARALLELIZATION=ON  \
            -DBUILD_TUTORIALS=OFF \
            -DBUILD_TESTS=ON   \
            -DBUILD_DOC=OFF

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: make -j2

      - name: Install Strip
        working-directory: ${{github.workspace}}/build
        run: sudo make install

      - name: Test C++
        working-directory: ${{github.workspace}}/build
        run: make check

      - name: Test Python
        working-directory: ${{github.workspace}}
        run: pytest-3 tests/python/


