name: Build and test

on:
  push:
  pull_request:
  release:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    container: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
         - {
             name: "Ubuntu_GDAL_3_0_2",
             os: "osgeo/gdal:ubuntu-full-3.0.2",
             artifact: "ubuntu_gdal_3_0_2.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_3_0_4",
             os: "osgeo/gdal:ubuntu-full-3.0.4",
             artifact: "ubuntu_gdal_3_0_4.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_3_1_3",
             os: "osgeo/gdal:ubuntu-full-3.1.3",
             artifact: "ubuntu_gdal_3_1_3.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_3_2_3",
             os: "osgeo/gdal:ubuntu-full-3.2.3",
             artifact: "ubuntu_gdal_3_2_3.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_3_3_3",
             os: "osgeo/gdal:ubuntu-full-3.3.3",
             artifact: "ubuntu_gdal_3_3_3.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_3_4_3",
             os: "osgeo/gdal:ubuntu-full-3.4.3",
             artifact: "ubuntu_gdal_3_4_3.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_3_5_3",
             os: "osgeo/gdal:ubuntu-full-3.5.3",
             artifact: "ubuntu_gdal_3_5_3.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_3_6_2",
             os: "osgeo/gdal:ubuntu-full-3.6.2",
             artifact: "ubuntu_gdal_3_6_2.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }
         - {
             name: "Ubuntu_GDAL_latest",
             os: "osgeo/gdal:ubuntu-full-latest",
             artifact: "ubuntu_gdal_latest.7z",
             build_type: "Release",
             cc: "gcc",
             cxx: "g++",
             archiver: "7z a",
             generators: "Unix Makefiles"
           }

    steps:
      - uses: actions/checkout@v2
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - uses: lukka/get-cmake@latest

      - name: Ubuntu system dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive
          apt update
          apt-get install -y --no-install-recommends build-essential build-essential doxygen g++ git libeigen3-dev libpython3-dev python3-matplotlib python3 python3-pip python3-pytest lcov libboost-dev libtbb-dev libgtest-dev
          python3 -m pip install gcovr
          cd /usr/src/gtest
          cmake CMakeLists.txt
          make
          cp *.a /usr/lib/ 2>\dev\null || :
          cp lib/*.a /usr/lib/ 2>\dev\null || :
          ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a
          ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a


      - name: Install swig (4.0) with apt
        if: ${{!startsWith(matrix.config.name, 'Ubuntu_GDAL_3_0')}}
        run: apt-get install -y --no-install-recommends swig

      - name: Install swig (4.0) from source
        if: ${{startsWith(matrix.config.name, 'Ubuntu_GDAL_3_0')}}
        run: |
          apt-get install -y --no-install-recommends autoconf automake autotools-dev libpcre2-dev yacc bison
          git clone https://github.com/swig/swig.git
          cd swig
          ./autogen.sh
          ./configure
          make -j2
          make install



      - name: Configure GDAL
        shell: bash
        run: |
          mkdir -p /usr/include/new_gdal
          cp -r /usr/include/gdal* /usr/include/new_gdal/
          cp /usr/include/ogr* /usr/include/new_gdal/
          cp /usr/include/cpl* /usr/include/new_gdal/
          mv /usr/include/new_gdal/ /usr/include/gdal/


      - name: Configure
        working-directory: ${{github.workspace}}
        shell: bash
        run: |
          mkdir build
          mkdir instdir
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir  \
            -DBUILD_PYTHON=ON   \
            -DALLOW_PARALLELIZATION=ON  \
            -DBUILD_TUTORIALS=OFF \
            -DBUILD_TESTS=ON   \
            -DBUILD_DOC=OFF

      - name: Build
        working-directory: ${{github.workspace}}/build
        run: make -j2

      - name: Install Strip
        working-directory: ${{github.workspace}}/build
        run: make install

      - name: Test C++
        working-directory: ${{github.workspace}}/build
        run: make check

      - name: Test Python
        working-directory: ${{github.workspace}}
        run: pytest-3 tests/python/


