name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Create Build Directory
      run: cmake -E make_directory ${{github.workspace}}/build    
        
    - name: Install Packages
      run: |
            sudo add-apt-repository -y ppa:ubuntugis/ppa
            sudo apt-get -y update -qq
            sudo apt-get install -y gcc-multilib python3 curl zip unzip g++ cmake make
            sudo apt-get install -y --no-install-recommends build-essential ca-certificates  doxygen git libeigen3-dev libgdal-dev libpython3-dev python3-pip python3-matplotlib lcov libgtest-dev libtbb-dev swig python3-pytest
            python -m pip install gcovr

    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_PYTHON=ON -Wno-dev -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: make -j$(nproc)

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: make check
      
