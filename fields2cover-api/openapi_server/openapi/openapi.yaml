openapi: 3.0.0
info:
  description: API to generate paths and routes based on field and working lanes data.
  title: Path Generation API
  version: 1.0.0
servers:
- url: /
paths:
  /generatePath:
    post:
      operationId: generate_path_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_generatePath_post_request'
        required: true
        x-body-name: generate_path_post_request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: Path generated successfully
        "400":
          description: Invalid input
        "500":
          description: Internal server error
      summary: Generate a path based on field data
      x-openapi-router-controller: openapi_server.controllers.path_controller
  /generateRoute:
    post:
      operationId: generate_route_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_generateRoute_post_request'
        required: true
        x-body-name: generate_route_post_request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generate_route_post_200_response'
          description: Route generated successfully
        "400":
          description: Invalid input
        "500":
          description: Internal server error
      summary: Generate a route based on field data
      x-openapi-router-controller: openapi_server.controllers.route_controller
  /generateShortestRoute:
    post:
      operationId: generate_shortest_route_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_generateShortestRoute_post_request'
        required: true
        x-body-name: generate_shortest_route_post_request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/generate_route_post_200_response'
          description: Shortest route generated successfully
        "400":
          description: Invalid input
        "500":
          description: Internal server error
      summary: Generate the shortest route based on field data
      x-openapi-router-controller: openapi_server.controllers.route_controller
components:
  schemas:
    Path:
      example:
        poses:
        - len: 0.0
          angle: 0.0
          point:
            bbox:
            - 0.8008281904610115
            - 0.8008281904610115
            coordinates: null
            type: Point
        - len: 0.0
          angle: 0.0
          point:
            bbox:
            - 0.8008281904610115
            - 0.8008281904610115
            coordinates: null
            type: Point
      properties:
        poses:
          items:
            $ref: '#/components/schemas/Pose'
          title: poses
          type: array
      required:
      - poses
      title: Path
    Pose:
      example:
        len: 0.0
        angle: 0.0
        point:
          bbox:
          - 0.8008281904610115
          - 0.8008281904610115
          coordinates: null
          type: Point
      properties:
        point:
          $ref: '#/components/schemas/Point'
        angle:
          description: Angle of the path
          example: 0.0
          title: angle
          type: number
        len:
          description: Length of the path (must be >= 0)
          example: 0.0
          minimum: 0
          title: len
          type: number
      required:
      - angle
      - len
      - point
      title: Path
      type: object
    _generatePath_post_request_settings:
      properties:
        robotSettings:
          $ref: '#/components/schemas/Robot_Settings'
        sorterSettings:
          $ref: '#/components/schemas/_generatePath_post_request_settings_sorterSettings'
        curvesAlgorithm:
          description: Algorithm to generate curves
          enum:
          - dubins
          - dubins_cc
          - reeds_shepp
          example: dubins
          title: curvesAlgorithm
          type: string
      title: _generatePath_post_request_settings
      type: object
    _generatePath_post_request:
      properties:
        workingLanes:
          $ref: '#/components/schemas/FeatureCollection'
        transportLanes:
          $ref: '#/components/schemas/FeatureCollection'
        startPoint:
          $ref: '#/components/schemas/Point'
        endPoint:
          $ref: '#/components/schemas/Point'
        robotSettings:
          $ref: '#/components/schemas/_generatePath_post_request_settings/properties/robotSettings'
        sorterSettings:
          $ref: '#/components/schemas/_generatePath_post_request_settings/properties/sorterSettings'
        curvesAlgorithm:
          $ref: '#/components/schemas/_generatePath_post_request_settings/properties/curvesAlgorithm'
      required:
      - curvesAlgorithm
      - robotSettings
      - sorterSettings
      - startPoint
      - endPoint
      - transportLanes
      - workingLanes
      title: _generatePath_post_request
      type: object
    _generateRoute_post_request:
      properties:
        workingLanes:
          $ref: '#/components/schemas/FeatureCollection'
        transportLanes:
          $ref: '#/components/schemas/FeatureCollection'
        startPoint:
          $ref: '#/components/schemas/Point'
        endPoint:
          $ref: '#/components/schemas/Point'
        sorterSettings:
          $ref: '#/components/schemas/_generatePath_post_request_settings/properties/sorterSettings'
      required:
      - sorterSettings
      - startPoint
      - endPoint
      - transportLanes
      - workingLanes
      title: _generateRoute_post_request
      type: object
    _generateShortestRoute_post_request:
      properties:
        workingLanes:
          $ref: '#/components/schemas/FeatureCollection'
        transportLanes:
          $ref: '#/components/schemas/FeatureCollection'
        startPoint:
          $ref: '#/components/schemas/Point'
        endPoint:
          $ref: '#/components/schemas/Point'
      required:
      - endPoint
      - startPoint
      - transportLanes
      - workingLanes
      title: _generateShortestRoute_post_request
      type: object
    Robot_Settings:
      properties:
        width:
          description: Width of the robot
          example: 2.0
          title: width
          type: number
        cov_width:
          description: Width of the headland
          example: 3.0
          title: cov_width
          type: number
        max_curv:
          description: Maximum curvature
          example: 0.5
          title: max_curv
          type: number
        max_diff_curv:
          description: Maximum difference in curvature
          example: 0.2
          title: max_diff_curv
          type: number
      title: Robot Settings
      type: object
    _generatePath_post_request_settings_sorterSettings:
      properties:
        algorithm:
          description: Algorithm to sort the swaths
          enum:
          - snake
          - boustrophedon
          - spiral
          - optimal
          example: snake
          title: sorterAlgorithm
          type: string
        variant:
          default: 1
          description: Variant of the sorter algorithm (1..4)
          example: 1
          title: sorterVariant
          type: integer
        spiralSize:
          description: Size of the spiral
          example: 10
          title: spiralSize
          type: integer
      required:
      - algorithm
      title: _generatePath_post_request_settings_sorterSettings
    GeoJsonObject:
      description: |
        GeoJSon object
        The coordinate reference system for all GeoJSON coordinates is a geographic coordinate reference system, using the World Geodetic System 1984 (WGS 84) datum, with longitude and latitude units of decimal degrees. This is equivalent to the coordinate reference system identified by the Open Geospatial Consortium (OGC) URN An OPTIONAL third-position element SHALL be the height in meters above or below the WGS 84 reference ellipsoid. In the absence of elevation values, applications sensitive to height or depth SHOULD interpret positions as being at local ground or sea level.
      discriminator:
        propertyName: type
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3
      properties:
        type:
          enum:
          - Feature
          - FeatureCollection
          - Point
          - MultiPoint
          - LineString
          - MultiLineString
          - Polygon
          - MultiPolygon
          - GeometryCollection
          title: type
          type: string
        bbox:
          description: |
            A GeoJSON object MAY have a member named "bbox" to include information on the coordinate range for its Geometries, Features, or FeatureCollections. The value of the bbox member MUST be an array of length 2*n where n is the number of dimensions represented in the contained geometries, with all axes of the most southwesterly point followed by all axes of the more northeasterly point. The axes order of a bbox follows the axes order of geometries.
          items:
            type: number
          title: bbox
          type: array
      required:
      - type
      title: GeoJsonObject
      type: object
    Geometry:
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - discriminator:
          propertyName: type
        properties:
          coordinates:
            $ref: '#/components/schemas/Geometry_allOf_coordinates'
          type:
            enum:
            - Point
            - MultiPoint
            - LineString
            - MultiLineString
            - Polygon
            - MultiPolygon
            - GeometryCollection
            type: string
        required:
        - type
        type: object
      description: |
        Abstract type for all GeoJSon object except Feature and FeatureCollection
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3
      title: Geometry
    GeometryElement:
      allOf:
      - $ref: '#/components/schemas/Geometry'
      - discriminator:
          propertyName: type
        properties:
          type:
            enum:
            - Point
            - MultiPoint
            - LineString
            - MultiLineString
            - Polygon
            - MultiPolygon
            type: string
        required:
        - type
        type: object
      description: |
        Abstract type for all GeoJSon 'Geometry' object the type of which is not 'GeometryCollection'
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3
      title: GeometryElement
    Feature:
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - properties:
          geometry:
            $ref: '#/components/schemas/Feature_allOf_geometry'
          properties:
            $ref: '#/components/schemas/Feature_allOf_properties'
          id:
            $ref: '#/components/schemas/Feature_allOf_id'
        required:
        - geometry
        - properties
        type: object
      description: GeoJSon 'Feature' object
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.2
      title: Feature
    FeatureCollection:
      allOf:
      - $ref: '#/components/schemas/GeoJsonObject'
      - properties:
          features:
            items:
              $ref: '#/components/schemas/Feature'
            type: array
        required:
        - features
        type: object
      description: GeoJSon 'FeatureCollection' object
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.3
      title: FeatureCollection
    Position:
      description: |
        GeoJSon fundamental geometry construct.
        A position is an array of numbers. There MUST be two or more elements. The first two elements are longitude and latitude, or easting and northing, precisely in that order and using decimal numbers. Altitude or elevation MAY be included as an optional third element.
        Implementations SHOULD NOT extend positions beyond three elements because the semantics of extra elements are unspecified and ambiguous. Historically, some implementations have used a fourth element to carry a linear referencing measure (sometimes denoted as "M") or a numerical timestamp, but in most situations a parser will not be able to properly interpret these values. The interpretation and meaning of additional elements is beyond the scope of this specification, and additional elements MAY be ignored by parsers.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.1
      items:
        type: number
      maxItems: 3
      minItems: 2
      title: Position
      type: array
    LineStringCoordinates:
      description: |
        GeoJSon fundamental geometry construct, array of two or more positions.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.4
      items:
        $ref: '#/components/schemas/Position'
      minItems: 2
      title: LineStringCoordinates
      type: array
    LinearRing:
      description: |
        A linear ring is a closed LineString with four or more positions.
        The first and last positions are equivalent, and they MUST contain identical values; their representation SHOULD also be identical.
        A linear ring is the boundary of a surface or the boundary of a hole in a surface.
        A linear ring MUST follow the right-hand rule with respect to the area it bounds, i.e., exterior rings are counterclockwise, and holes are clockwise.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.6
      items:
        $ref: '#/components/schemas/Position'
      minItems: 4
      title: LinearRing
      type: array
    Point:
      allOf:
      - $ref: '#/components/schemas/GeometryElement'
      - properties:
          type:
            enum:
            - Point
            type: string
          coordinates:
            $ref: '#/components/schemas/Position'
        required:
        - coordinates
        - type
        type: object
      description: GeoJSon geometry
      example:
        bbox:
        - 0.8008281904610115
        - 0.8008281904610115
        coordinates: null
        type: Point
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.2
      title: Point
    MultiPoint:
      allOf:
      - $ref: '#/components/schemas/GeometryElement'
      - properties:
          coordinates:
            items:
              $ref: '#/components/schemas/Position'
            type: array
        required:
        - coordinates
        type: object
      description: GeoJSon geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.3
    LineString:
      allOf:
      - $ref: '#/components/schemas/GeometryElement'
      - properties:
          coordinates:
            $ref: '#/components/schemas/LineStringCoordinates'
        required:
        - coordinates
        type: object
      description: GeoJSon geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.4
      title: LineString
    MultiLineString:
      allOf:
      - $ref: '#/components/schemas/GeometryElement'
      - properties:
          coordinates:
            items:
              $ref: '#/components/schemas/LineStringCoordinates'
            type: array
        required:
        - coordinates
        type: object
      description: GeoJSon geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.5
    Polygon:
      allOf:
      - $ref: '#/components/schemas/GeometryElement'
      - properties:
          coordinates:
            items:
              $ref: '#/components/schemas/LinearRing'
            type: array
        required:
        - coordinates
        type: object
      description: GeoJSon geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.6
    MultiPolygon:
      allOf:
      - $ref: '#/components/schemas/GeometryElement'
      - properties:
          coordinates:
            items:
              items:
                $ref: '#/components/schemas/LinearRing'
              type: array
            type: array
        required:
        - coordinates
        type: object
      description: GeoJSon geometry
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.7
    GeometryCollection:
      allOf:
      - $ref: '#/components/schemas/Geometry'
      - properties:
          geometries:
            items:
              $ref: '#/components/schemas/GeometryElement'
            minItems: 0
            type: array
        required:
        - geometries
        type: object
      description: |
        GeoJSon geometry collection
        GeometryCollections composed of a single part or a number of parts of a single type SHOULD be avoided when that single part or a single object of multipart type (MultiPoint, MultiLineString, or MultiPolygon) could be used instead.
      externalDocs:
        url: https://tools.ietf.org/html/rfc7946#section-3.1.8
      type: object
    generate_route_post_200_response:
      allOf:
      - $ref: '#/components/schemas/LineString'
      - properties:
          type:
            enum:
            - LineString
            type: string
        type: object
      example:
        bbox:
        - 0.8008281904610115
        - 0.8008281904610115
        coordinates:
        - null
        - null
        type: LineString
      required:
      - coordinates
      - type
      title: generate_route_post_200_response
    Geometry_allOf_coordinates_oneOf_inner:
      oneOf:
      - $ref: '#/components/schemas/Position'
      - $ref: '#/components/schemas/LineStringCoordinates'
      - $ref: '#/components/schemas/LinearRing'
      title: Geometry_allOf_coordinates_oneOf_inner
    Geometry_allOf_coordinates:
      oneOf:
      - $ref: '#/components/schemas/Position'
      - items:
          $ref: '#/components/schemas/Geometry_allOf_coordinates_oneOf_inner'
        type: array
      - items:
          items:
            $ref: '#/components/schemas/LinearRing'
          type: array
        type: array
      title: Geometry_allOf_coordinates
    Feature_allOf_geometry:
      allOf:
      - nullable: true
      - $ref: '#/components/schemas/Geometry'
      title: Feature_allOf_geometry
    Feature_allOf_properties:
      nullable: true
      type: object
    Feature_allOf_id:
      oneOf:
      - type: number
      - type: string
      title: Feature_allOf_id
