from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GeneratePathPostRequestSettingsSorterSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, algorithm=None, variant=1, spiral_size=None):  # noqa: E501
        """GeneratePathPostRequestSettingsSorterSettings - a model defined in OpenAPI

        :param algorithm: The algorithm of this GeneratePathPostRequestSettingsSorterSettings.  # noqa: E501
        :type algorithm: str
        :param variant: The variant of this GeneratePathPostRequestSettingsSorterSettings.  # noqa: E501
        :type variant: int
        :param spiral_size: The spiral_size of this GeneratePathPostRequestSettingsSorterSettings.  # noqa: E501
        :type spiral_size: int
        """
        self.openapi_types = {
            'algorithm': str,
            'variant': int,
            'spiral_size': int
        }

        self.attribute_map = {
            'algorithm': 'algorithm',
            'variant': 'variant',
            'spiral_size': 'spiralSize'
        }

        self._algorithm = algorithm
        self._variant = variant
        self._spiral_size = spiral_size

    @classmethod
    def from_dict(cls, dikt) -> 'GeneratePathPostRequestSettingsSorterSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _generatePath_post_request_settings_sorterSettings of this GeneratePathPostRequestSettingsSorterSettings.  # noqa: E501
        :rtype: GeneratePathPostRequestSettingsSorterSettings
        """
        return util.deserialize_model(dikt, cls)

    @property
    def algorithm(self) -> str:
        """Gets the algorithm of this GeneratePathPostRequestSettingsSorterSettings.

        Algorithm to sort the swaths  # noqa: E501

        :return: The algorithm of this GeneratePathPostRequestSettingsSorterSettings.
        :rtype: str
        """
        return self._algorithm

    @algorithm.setter
    def algorithm(self, algorithm: str):
        """Sets the algorithm of this GeneratePathPostRequestSettingsSorterSettings.

        Algorithm to sort the swaths  # noqa: E501

        :param algorithm: The algorithm of this GeneratePathPostRequestSettingsSorterSettings.
        :type algorithm: str
        """
        allowed_values = ["snake", "boustrophedon", "spiral", "optimal"]  # noqa: E501
        if algorithm not in allowed_values:
            raise ValueError(
                "Invalid value for `algorithm` ({0}), must be one of {1}"
                .format(algorithm, allowed_values)
            )

        self._algorithm = algorithm

    @property
    def variant(self) -> int:
        """Gets the variant of this GeneratePathPostRequestSettingsSorterSettings.

        Variant of the sorter algorithm (1..4)  # noqa: E501

        :return: The variant of this GeneratePathPostRequestSettingsSorterSettings.
        :rtype: int
        """
        return self._variant

    @variant.setter
    def variant(self, variant: int):
        """Sets the variant of this GeneratePathPostRequestSettingsSorterSettings.

        Variant of the sorter algorithm (1..4)  # noqa: E501

        :param variant: The variant of this GeneratePathPostRequestSettingsSorterSettings.
        :type variant: int
        """

        self._variant = variant

    @property
    def spiral_size(self) -> int:
        """Gets the spiral_size of this GeneratePathPostRequestSettingsSorterSettings.

        Size of the spiral  # noqa: E501

        :return: The spiral_size of this GeneratePathPostRequestSettingsSorterSettings.
        :rtype: int
        """
        return self._spiral_size

    @spiral_size.setter
    def spiral_size(self, spiral_size: int):
        """Sets the spiral_size of this GeneratePathPostRequestSettingsSorterSettings.

        Size of the spiral  # noqa: E501

        :param spiral_size: The spiral_size of this GeneratePathPostRequestSettingsSorterSettings.
        :type spiral_size: int
        """

        self._spiral_size = spiral_size
