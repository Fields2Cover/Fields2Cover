from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.pose import Pose
from openapi_server import util

from openapi_server.models.pose import Pose  # noqa: E501

class Path(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, poses=None):  # noqa: E501
        """Path - a model defined in OpenAPI

        :param poses: The poses of this Path.  # noqa: E501
        :type poses: List[Pose]
        """
        self.openapi_types = {
            'poses': List[Pose]
        }

        self.attribute_map = {
            'poses': 'poses'
        }

        self._poses = poses

    @classmethod
    def from_dict(cls, dikt) -> 'Path':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Path of this Path.  # noqa: E501
        :rtype: Path
        """
        return util.deserialize_model(dikt, cls)

    @property
    def poses(self) -> List[Pose]:
        """Gets the poses of this Path.


        :return: The poses of this Path.
        :rtype: List[Pose]
        """
        return self._poses

    @poses.setter
    def poses(self, poses: List[Pose]):
        """Sets the poses of this Path.


        :param poses: The poses of this Path.
        :type poses: List[Pose]
        """
        if poses is None:
            raise ValueError("Invalid value for `poses`, must not be `None`")  # noqa: E501

        self._poses = poses
